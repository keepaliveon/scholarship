<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.haue.scholarship.mapper.GradeMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="cn.edu.haue.scholarship.entity.Grade">
        <id column="student_id" property="studentId"/>
        <id column="year" property="year"/>
        <result column="score" property="score"/>
        <result column="quality" property="quality"/>
        <result column="mark" property="mark"/>
        <result column="fail" property="fail"/>
        <result column="name" property="name"/>
        <result column="clazz" property="clazz"/>
        <result column="speciality" property="speciality"/>
    </resultMap>
    <select id="findAllByYearUnitId" parameterType="java.lang.Integer"
            resultType="cn.edu.haue.scholarship.entity.Grade">
        SELECT grade.student_id,
               student.`name`,
               B.`name`                    AS speciality,
               A.`name`                    AS clazz,
               `year`,
               score,
               quality,
               fail,
               score * 0.7 + quality * 0.3 AS mark
        FROM grade
                 LEFT JOIN student ON student.student_id = grade.student_id
                 JOIN unit A ON A.id = student.unit_id
                 JOIN unit B ON B.id = A.pid
                 JOIN unit C ON C.id = B.pid
        WHERE C.id = #{unitId,jdbcType=INTEGER}
        ORDER BY mark DESC, `year`
    </select>
    <select id="getStudentGradeInfoByStudentIdAndYear" resultType="cn.edu.haue.scholarship.entity.Grade">
        select s.name,
               g.score,
               g.quality,
               g.fail,
               (select (select count(g2.student_id)
                        from grade g2
                                 LEFT JOIN student s2 ON s2.student_id = g2.student_id
                                 LEFT JOIN unit u1b ON u1b.id = s2.unit_id
                        where (g1.score * 0.7 + g1.quality * 0.3) &lt; (g2.score * 0.7 + g2.quality * 0.3)
                          and u1b.id = u1a.id
                          and g2.year = #{year,jdbcType=CHAR}) + 1
                from grade g1
                         LEFT JOIN student s1 ON s1.student_id = g1.student_id
                         LEFT JOIN unit u1a ON u1a.id = s1.unit_id
                WHERE s1.student_id = #{studentId,jdbcType=CHAR}
                  and g1.year = #{year,jdbcType=CHAR}) as class_rank,
               (select (select count(g2.student_id)
                        from grade g2
                                 LEFT JOIN student s2 ON s2.student_id = g2.student_id
                                 LEFT JOIN unit u1b ON u1b.id = s2.unit_id
                                 LEFT JOIN unit u2b ON u2b.id = u1b.pid
                        where (g1.score * 0.7 + g1.quality * 0.3) &lt; (g2.score * 0.7 + g2.quality * 0.3)
                          and u2b.id = u2a.id
                          and g2.year = #{year,jdbcType=CHAR}) + 1
                from grade g1
                         LEFT JOIN student s1 ON s1.student_id = g1.student_id
                         LEFT JOIN unit u1a ON u1a.id = s1.unit_id
                         LEFT JOIN unit u2a ON u2a.id = u1a.pid
                WHERE s1.student_id = #{studentId,jdbcType=CHAR}
                  and g1.year = #{year,jdbcType=CHAR}) as spec_rank
        from grade g
                 left join student s on g.student_id = s.student_id
        where s.student_id = #{studentId,jdbcType=CHAR}
          and g.year = #{year,jdbcType=CHAR};
    </select>


</mapper>
